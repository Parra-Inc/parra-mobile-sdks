
orbs:
  # ruby: circleci/ruby@2.1.0
  # macos: circleci/macos@2.5.2
  bun: ksylvest/bun@1.0.1
  rust: circleci/rust@1.6.1

commands:
  common:
    steps:
      - checkout # Can't use shallow clone orbs because circle repo url env var isn't being set for some reason.
      - attach_workspace:
          at: .
      - bun/install
      - run:
          name: Install NPM Dependencies
          command: bun install --frozen-lockfile

  # prepare_ios_prerequisites:
  #   steps:
  #     - run:
  #         name: Install Brew Dependencies
  #         command: ./scripts.sh ci --install-brew-dependencies
  #     - run:
  #         name: Extract ASC Credential
  #         command: |
  #           dirname $PARRA_ASC_API_KEY_PATH | xargs mkdir -p
  #           echo $PARRA_ASC_API_KEY | base64 --decode > $PARRA_ASC_API_KEY_PATH

executors:
  # m1.medium -> 150 credits/min
  # m1.large -> 250 credits/min

  macos-m1-test-runner:
    macos:
      xcode: 15.4.0
    resource_class: macos.m1.medium.gen1
    environment:
      PARRA_TEST_DERIVED_DATA_DIRECTORY: build/unit-tests/derivedData
      PARRA_TEST_OUTPUT_DIRECTORY: artifacts/unit-tests
      PARRA_TEST_PROJECT_NAME: ./Parra.xcodeproj
      PARRA_TEST_SCHEME_NAME: Parra
      PARRA_TEST_CONFIGURATION: Debug
      PARRA_TEST_DEVICE_NAME: iPhone 15
      PARRA_TEST_DEVICE_OS_VERSION: 17.4
      PARRA_TEST_DESTINATION: platform=iOS Simulator,name=iPhone 15,OS=17.4
      PARRA_ASC_API_KEY_PATH: ./artifacts/asc-key.p8
    working_directory: /tmp/workspace

  macos-m1-release-runner:
    macos:
      xcode: 15.4.0
    resource_class: macos.m1.medium.gen1
    working_directory: /tmp/workspace

version: 2.1
jobs:
  # build-and-test:
  #   executor: macos-m1-test-runner
  #   steps:
  #     - common
  #     - prepare_ios_prerequisites
  #     - run:
  #         name: Build for Testing
  #         command: ./cli.sh tests --build --log-level debug
  #     - run:
  #         name: Run Unit Tests
  #         command: ./cli.sh tests --run --log-level debug
  #     - store_test_results:
  #         path: build/unit-tests/derivedData/Logs/Test

  release-ios-sdk:
    executor: macos-m1-release-runner
    steps:
      - checkout # Can't use shallow clone orbs because circle repo url env var isn't being set for some reason.
      - run: # Triggered by a tag. Switch to the main branch to do work on the commit associated with the tag.
          name: Switch to main branch
          command: |
            git switch main
      - attach_workspace:
          at: .
      - bun/install
      - run:
          name: Install NPM Dependencies
          command: bun install --frozen-lockfile
      - add_ssh_keys:
          fingerprints:
            - "SHA256:6lSvuV68FjDCEY0ooSGyTWzAw9ryBq4JfhUdSN8XZ/Q"
      - run:
          name: Determining Version
          command: echo "Preparing release $CIRCLE_TAG"
      - rust/install
      - run:
          name: Install Rust x86_64 Support
          command: rustup target install x86_64-apple-darwin
      - run:
          name: Install Brew Dependencies
          command: |
            # Only install the brew deps we need for this step.
            export HOMEBREW_NO_AUTO_UPDATE=1
            export HOMEBREW_NO_INSTALL_CLEANUP=1
            export HOMEBREW_NO_INSTALL_UPGRADE=1
            export HOMEBREW_NO_ANALYTICS=1

            brew install xcodegen gh jq --quiet
      - run:
          name: Prepare CLI Release
          command: |            
            cd cli; ./release_update.sh $CIRCLE_TAG

      - run:
          name: Create Sample App
          command: |
            ./cli/target/aarch64-apple-darwin/release/parra bootstrap --template parra-sample-remote

      - run:
          name: Committing Updated CLI and Sample
          command: |
            git config credential.helper 'cache --timeout=120'
            git config --global user.name "$GH_USER"
            git config --global user.email "$GH_EMAIL"

            git add sample
            git add cli
            git commit -m "Released version $CIRCLE_TAG [skip ci]"

            # Same token
            export GH_TOKEN="$SDKS_REPO_ACCESS_TOKEN"

            # Quiet push so key isn't shown in logs
            # git push -q git@github.com:Parra-Inc/tap.git main
            git push -q https://${SDKS_REPO_ACCESS_TOKEN}@github.com/Parra-Inc/parra-mobile-sdks.git main

            gh release create "$CIRCLE_TAG" ./cli/artifacts/*.tar.gz --generate-notes --verify-tag

            echo "Release created on GitHub"
      - run:
          name: Publish Brew Tap Update
          command: |
              ARM_SHA=$(find cli/artifacts -type f -name "*aarch*"  | xargs shasum --algorithm 256 | awk '{print $1}')
              X86_SHA=$(find cli/artifacts -type f -name "*x86_64*" | xargs shasum --algorithm 256 | awk '{print $1}')

              json_body=$(jq -n --arg version "$CIRCLE_TAG" --arg arm_sha "$ARM_SHA" --arg x86_sha "$X86_SHA" '{version: $version, arm_sha: $arm_sha, x86_sha: $x86_sha}')

              echo "Sending body:\n$json_body"

              curl -X POST -H "Content-Type: application/json" --data-raw "$json_body" "https://internal.circleci.com/private/soc/e/30933490-5852-4d4d-b5a4-09b0973599c3?secret=$TAP_WEBHOOK_SECRET" --fail-with-body

      - run:
          name: Wait for taps versioning
          command: |
            # This is necessary since the publish brew tap update job triggers a pipeline for a different repo
            # which may take a few seconds to boot up and run. The sample app build step below depends on having
            # the newest SDK version available to it, so we have to wait. In the future, this could be refactored
            # to an incoming webhook triggered by the taps repo when it is finished creating the release.
            sleep 30;

      - run:
          name: Trigger Sample App Build
          command: |
            # Switch to or create sample app branch.
            git switch parra-build-sample-app || git switch -c parra-build-sample-app

            git rebase --autosquash main
            git push -q -f https://${SDKS_REPO_ACCESS_TOKEN}@github.com/Parra-Inc/parra-mobile-sdks.git parra-build-sample-app
            
            echo "Kicked off sample app builds"


      # Triggered by tag. New tag has been created at this point
      # 0. Re-run sample app verification steps
      # 1. Update SDK version (don't need to do this, it's based on the already created tag)
      # 2. Update CLI version and create new build (cache artifacts dir) ([skip ci])
      # 3. Generate new sample app directory
      # 4. Create new commit and GitHub release "v${VERSION}" and attach CLI binaries (cache version, SHAs)
      # 5. Initiate webhook on tap repo
      # 6. (probably needs delay before starting) force merge to `parra-build-sample-app`

workflows:
  # run-unit-tests:
  #   jobs:
  #     - build-and-test
  release-sdk:
    jobs:
      - release-ios-sdk:
          filters: 
            tags:
              only: # x.y.z
                - /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/
            branches:
              ignore: /.*/
